---
import ArrowDown from "./ArrowDown.astro";
import ArrowRight from "./ArrowRight.astro";
import ArrowUp from "./ArrowUp.astro";

export interface Props {
  label?: string;
  title?: string;
  titleBold?: string;
  description?: string;
  imageUrl?: string;
  imageAlt?: string;
  imageRound?: boolean;
  link?: string;
  class?: string;
  arrow?: "up" | "down" | "right";
}

const {
  label,
  title,
  titleBold,
  description,
  imageUrl,
  imageAlt,
  imageRound = true,
  link,
  arrow,
  class: className,
}: Props = Astro.props;
---

<a
  href={link}
  class={`${className} p-2 lg:p-4 rounded-2xl flex flex-col min-h-[225px] overflow-hidden`}
>
  {
    imageUrl && (
      <img
        src={imageUrl}
        alt={imageAlt}
        class:list={[
          "block w-full border border-graphite-700",
          { "rounded-xl": imageRound },
        ]}
      />
    )
  }

  <div class="p-4 lg:p-6 h-full flex flex-col">
    {
      label && (
        <div class="mb-6 font-sans-2 text-sm font-semibold uppercase tracking-widest opacity-70">
          {label}
        </div>
      )
    }
    {
      (title || titleBold) && (
        <h3 class="flex-1 text-xl text-white text-opacity-70 md:text-3xl">
          {titleBold && <span class="font-medium text-white">{titleBold}</span>}
          {title}
        </h3>
      )
    }
    {
      (description || arrow) && (
        <div class="mt-1 flex items-center justify-between">
          <p class="text-white text-opacity-70">{description}</p>
          {arrow === "up" && <ArrowUp class="h-3 lg:h-8" />}
          {arrow === "down" && <ArrowDown class="h-3 lg:h-8" />}
          {arrow === "right" && <ArrowRight class="h-3 lg:h-8" />}
        </div>
      )
    }
  </div>
</a>
